name: Build, Test, and Deploy of 3-Tier-Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ECR_FRONTEND: ${{ secrets.AWS_ECR }}
  FRONTEND_DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  AWS_ECR_USERNAME: ${{ secrets.AWS_ECR_USERNAME }}
  AWS_ECR_BACKEND: ${{ secrets.AWS_ECR_BACKEND }}
  BACKEND_DOCKER_IMAGE: ${{ secrets.BACKEND_DOCKER_IMAGE }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

      # Configure AWS
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{ env.AWS_ECR_FRONTEND }}
        aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username ${{ env.AWS_ECR_USERNAME }} --password-stdin ${{ env.AWS_ECR_BACKEND }}
        
    - name: Build and Tag Docker Image
      run: |
        docker build -t ${{ env.FRONTEND_DOCKER_IMAGE }} ./frontend/.
        docker tag ${{ env.FRONTEND_DOCKER_IMAGE }}:latest ${{ env.AWS_ECR }}/${{ env.FRONTEND_DOCKER_IMAGE }}:latest

        docker build -t ${{ env.BACKEND_DOCKER_IMAGE }} ./backend/.
        docker tag ${{ env.BACKEND_DOCKER_IMAGE }}:latest ${{ env.AWS_ECR_BACKEND }}/${{ env.BACKEND_DOCKER_IMAGE }}:latest

    - name: Push Docker Image to ECR
      run:  |
        docker push ${{ env.AWS_ECR }}/${{ env.DOCKER_IMAGE }}:latest
        docker push ${{ env.AWS_ECR_BACKEND }}/${{ env.BACKEND_DOCKER_IMAGE }}:latest

    
